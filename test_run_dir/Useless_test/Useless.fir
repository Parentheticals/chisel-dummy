;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Useless : 
  module Useless : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip a : {flip ready : UInt<1>, valid : UInt<1>, bits : {num0 : UInt<1>[3], num1 : UInt<1>[3]}}, flip b : UInt<1>[3], rdy_b : UInt<1>, op : UInt<3>[2], delayed : UInt<3>[2], vld_delay : UInt<1>}
    
    node c_num0_hi = cat(io.a.bits.num0[0], io.a.bits.num0[1]) @[Cat.scala 30:58]
    node c_num0 = cat(c_num0_hi, io.a.bits.num0[2]) @[Cat.scala 30:58]
    node c_num1_hi = cat(io.a.bits.num1[0], io.a.bits.num1[1]) @[Cat.scala 30:58]
    node c_num1 = cat(c_num1_hi, io.a.bits.num1[2]) @[Cat.scala 30:58]
    node c_b_hi = cat(io.b[0], io.b[1]) @[Cat.scala 30:58]
    node c_b = cat(c_b_hi, io.b[2]) @[Cat.scala 30:58]
    when io.a.valid : @[Useless.scala 32:21]
      node _io_op_0_T = add(c_num0, c_b) @[Useless.scala 33:24]
      node _io_op_0_T_1 = tail(_io_op_0_T, 1) @[Useless.scala 33:24]
      io.op[0] <= _io_op_0_T_1 @[Useless.scala 33:14]
      node _io_op_1_T = add(c_num1, c_b) @[Useless.scala 34:24]
      node _io_op_1_T_1 = tail(_io_op_1_T, 1) @[Useless.scala 34:24]
      io.op[1] <= _io_op_1_T_1 @[Useless.scala 34:14]
      skip @[Useless.scala 32:21]
    else : @[Useless.scala 35:14]
      io.op[0] <= c_b @[Useless.scala 36:14]
      io.op[1] <= c_b @[Useless.scala 37:14]
      skip @[Useless.scala 35:14]
    io.a.ready <= UInt<1>("h01") @[Useless.scala 40:14]
    reg store1 : UInt<3>, clock with : (reset => (reset, UInt<1>("h00"))) @[Useless.scala 44:23]
    reg store2 : UInt<3>, clock with : (reset => (reset, UInt<1>("h00"))) @[Useless.scala 45:23]
    reg value : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[Counter.scala 60:40]
    node _T = eq(value, UInt<1>("h00")) @[Useless.scala 49:19]
    when _T : @[Useless.scala 49:28]
      io.rdy_b <= UInt<1>("h01") @[Useless.scala 50:14]
      io.vld_delay <= UInt<1>("h00") @[Useless.scala 51:18]
      skip @[Useless.scala 49:28]
    else : @[Useless.scala 52:14]
      io.rdy_b <= UInt<1>("h00") @[Useless.scala 53:14]
      io.vld_delay <= UInt<1>("h01") @[Useless.scala 54:18]
      skip @[Useless.scala 52:14]
    node wrap = eq(value, UInt<1>("h01")) @[Counter.scala 72:24]
    node _value_T = add(value, UInt<1>("h01")) @[Counter.scala 76:24]
    node _value_T_1 = tail(_value_T, 1) @[Counter.scala 76:24]
    value <= _value_T_1 @[Counter.scala 76:15]
    node _T_1 = eq(io.rdy_b, UInt<1>("h01")) @[Useless.scala 59:17]
    when _T_1 : @[Useless.scala 59:25]
      store1 <= c_num0 @[Useless.scala 60:12]
      store2 <= c_b @[Useless.scala 61:12]
      skip @[Useless.scala 59:25]
    io.delayed[0] <= store1 @[Useless.scala 64:17]
    io.delayed[1] <= store2 @[Useless.scala 65:17]
    
