;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit CNN : 
  module Neuron : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : SInt<7>[4], flip weights : SInt<7>[4], out : SInt<7>}
    
    node _mac_T = mul(io.in[0], io.weights[0]) @[CNN.scala 14:65]
    node _mac_T_1 = mul(io.in[1], io.weights[1]) @[CNN.scala 14:65]
    node _mac_T_2 = mul(io.in[2], io.weights[2]) @[CNN.scala 14:65]
    node _mac_T_3 = mul(io.in[3], io.weights[3]) @[CNN.scala 14:65]
    node _mac_T_4 = add(_mac_T, _mac_T_1) @[CNN.scala 14:77]
    node _mac_T_5 = tail(_mac_T_4, 1) @[CNN.scala 14:77]
    node _mac_T_6 = asSInt(_mac_T_5) @[CNN.scala 14:77]
    node _mac_T_7 = add(_mac_T_6, _mac_T_2) @[CNN.scala 14:77]
    node _mac_T_8 = tail(_mac_T_7, 1) @[CNN.scala 14:77]
    node _mac_T_9 = asSInt(_mac_T_8) @[CNN.scala 14:77]
    node _mac_T_10 = add(_mac_T_9, _mac_T_3) @[CNN.scala 14:77]
    node _mac_T_11 = tail(_mac_T_10, 1) @[CNN.scala 14:77]
    node mac = asSInt(_mac_T_11) @[CNN.scala 14:77]
    node _io_out_T = leq(mac, asSInt(UInt<1>("h00"))) @[CNNSpec.scala 16:41]
    node _io_out_T_1 = mux(_io_out_T, asSInt(UInt<1>("h00")), mac) @[CNNSpec.scala 16:38]
    io.out <= _io_out_T_1 @[CNN.scala 15:10]
    
  module Neuron_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : SInt<7>[4], flip weights : SInt<7>[4], out : SInt<7>}
    
    node _mac_T = mul(io.in[0], io.weights[0]) @[CNN.scala 14:65]
    node _mac_T_1 = mul(io.in[1], io.weights[1]) @[CNN.scala 14:65]
    node _mac_T_2 = mul(io.in[2], io.weights[2]) @[CNN.scala 14:65]
    node _mac_T_3 = mul(io.in[3], io.weights[3]) @[CNN.scala 14:65]
    node _mac_T_4 = add(_mac_T, _mac_T_1) @[CNN.scala 14:77]
    node _mac_T_5 = tail(_mac_T_4, 1) @[CNN.scala 14:77]
    node _mac_T_6 = asSInt(_mac_T_5) @[CNN.scala 14:77]
    node _mac_T_7 = add(_mac_T_6, _mac_T_2) @[CNN.scala 14:77]
    node _mac_T_8 = tail(_mac_T_7, 1) @[CNN.scala 14:77]
    node _mac_T_9 = asSInt(_mac_T_8) @[CNN.scala 14:77]
    node _mac_T_10 = add(_mac_T_9, _mac_T_3) @[CNN.scala 14:77]
    node _mac_T_11 = tail(_mac_T_10, 1) @[CNN.scala 14:77]
    node mac = asSInt(_mac_T_11) @[CNN.scala 14:77]
    node _io_out_T = leq(mac, asSInt(UInt<1>("h00"))) @[CNNSpec.scala 16:41]
    node _io_out_T_1 = mux(_io_out_T, asSInt(UInt<1>("h00")), mac) @[CNNSpec.scala 16:38]
    io.out <= _io_out_T_1 @[CNN.scala 15:10]
    
  module Neuron_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : SInt<7>[4], flip weights : SInt<7>[4], out : SInt<7>}
    
    node _mac_T = mul(io.in[0], io.weights[0]) @[CNN.scala 14:65]
    node _mac_T_1 = mul(io.in[1], io.weights[1]) @[CNN.scala 14:65]
    node _mac_T_2 = mul(io.in[2], io.weights[2]) @[CNN.scala 14:65]
    node _mac_T_3 = mul(io.in[3], io.weights[3]) @[CNN.scala 14:65]
    node _mac_T_4 = add(_mac_T, _mac_T_1) @[CNN.scala 14:77]
    node _mac_T_5 = tail(_mac_T_4, 1) @[CNN.scala 14:77]
    node _mac_T_6 = asSInt(_mac_T_5) @[CNN.scala 14:77]
    node _mac_T_7 = add(_mac_T_6, _mac_T_2) @[CNN.scala 14:77]
    node _mac_T_8 = tail(_mac_T_7, 1) @[CNN.scala 14:77]
    node _mac_T_9 = asSInt(_mac_T_8) @[CNN.scala 14:77]
    node _mac_T_10 = add(_mac_T_9, _mac_T_3) @[CNN.scala 14:77]
    node _mac_T_11 = tail(_mac_T_10, 1) @[CNN.scala 14:77]
    node mac = asSInt(_mac_T_11) @[CNN.scala 14:77]
    node _io_out_T = leq(mac, asSInt(UInt<1>("h00"))) @[CNNSpec.scala 16:41]
    node _io_out_T_1 = mux(_io_out_T, asSInt(UInt<1>("h00")), mac) @[CNNSpec.scala 16:38]
    io.out <= _io_out_T_1 @[CNN.scala 15:10]
    
  module Neuron_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : SInt<7>[4], flip weights : SInt<7>[4], out : SInt<7>}
    
    node _mac_T = mul(io.in[0], io.weights[0]) @[CNN.scala 14:65]
    node _mac_T_1 = mul(io.in[1], io.weights[1]) @[CNN.scala 14:65]
    node _mac_T_2 = mul(io.in[2], io.weights[2]) @[CNN.scala 14:65]
    node _mac_T_3 = mul(io.in[3], io.weights[3]) @[CNN.scala 14:65]
    node _mac_T_4 = add(_mac_T, _mac_T_1) @[CNN.scala 14:77]
    node _mac_T_5 = tail(_mac_T_4, 1) @[CNN.scala 14:77]
    node _mac_T_6 = asSInt(_mac_T_5) @[CNN.scala 14:77]
    node _mac_T_7 = add(_mac_T_6, _mac_T_2) @[CNN.scala 14:77]
    node _mac_T_8 = tail(_mac_T_7, 1) @[CNN.scala 14:77]
    node _mac_T_9 = asSInt(_mac_T_8) @[CNN.scala 14:77]
    node _mac_T_10 = add(_mac_T_9, _mac_T_3) @[CNN.scala 14:77]
    node _mac_T_11 = tail(_mac_T_10, 1) @[CNN.scala 14:77]
    node mac = asSInt(_mac_T_11) @[CNN.scala 14:77]
    node _io_out_T = leq(mac, asSInt(UInt<1>("h00"))) @[CNNSpec.scala 16:41]
    node _io_out_T_1 = mux(_io_out_T, asSInt(UInt<1>("h00")), mac) @[CNNSpec.scala 16:38]
    io.out <= _io_out_T_1 @[CNN.scala 15:10]
    
  module Neuron_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : SInt<7>[4], flip weights : SInt<7>[4], out : SInt<7>}
    
    node _mac_T = mul(io.in[0], io.weights[0]) @[CNN.scala 14:65]
    node _mac_T_1 = mul(io.in[1], io.weights[1]) @[CNN.scala 14:65]
    node _mac_T_2 = mul(io.in[2], io.weights[2]) @[CNN.scala 14:65]
    node _mac_T_3 = mul(io.in[3], io.weights[3]) @[CNN.scala 14:65]
    node _mac_T_4 = add(_mac_T, _mac_T_1) @[CNN.scala 14:77]
    node _mac_T_5 = tail(_mac_T_4, 1) @[CNN.scala 14:77]
    node _mac_T_6 = asSInt(_mac_T_5) @[CNN.scala 14:77]
    node _mac_T_7 = add(_mac_T_6, _mac_T_2) @[CNN.scala 14:77]
    node _mac_T_8 = tail(_mac_T_7, 1) @[CNN.scala 14:77]
    node _mac_T_9 = asSInt(_mac_T_8) @[CNN.scala 14:77]
    node _mac_T_10 = add(_mac_T_9, _mac_T_3) @[CNN.scala 14:77]
    node _mac_T_11 = tail(_mac_T_10, 1) @[CNN.scala 14:77]
    node mac = asSInt(_mac_T_11) @[CNN.scala 14:77]
    node _io_out_T = leq(mac, asSInt(UInt<1>("h00"))) @[CNNSpec.scala 16:41]
    node _io_out_T_1 = mux(_io_out_T, asSInt(UInt<1>("h00")), mac) @[CNNSpec.scala 16:38]
    io.out <= _io_out_T_1 @[CNN.scala 15:10]
    
  module Neuron_5 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : SInt<7>[4], flip weights : SInt<7>[4], out : SInt<7>}
    
    node _mac_T = mul(io.in[0], io.weights[0]) @[CNN.scala 14:65]
    node _mac_T_1 = mul(io.in[1], io.weights[1]) @[CNN.scala 14:65]
    node _mac_T_2 = mul(io.in[2], io.weights[2]) @[CNN.scala 14:65]
    node _mac_T_3 = mul(io.in[3], io.weights[3]) @[CNN.scala 14:65]
    node _mac_T_4 = add(_mac_T, _mac_T_1) @[CNN.scala 14:77]
    node _mac_T_5 = tail(_mac_T_4, 1) @[CNN.scala 14:77]
    node _mac_T_6 = asSInt(_mac_T_5) @[CNN.scala 14:77]
    node _mac_T_7 = add(_mac_T_6, _mac_T_2) @[CNN.scala 14:77]
    node _mac_T_8 = tail(_mac_T_7, 1) @[CNN.scala 14:77]
    node _mac_T_9 = asSInt(_mac_T_8) @[CNN.scala 14:77]
    node _mac_T_10 = add(_mac_T_9, _mac_T_3) @[CNN.scala 14:77]
    node _mac_T_11 = tail(_mac_T_10, 1) @[CNN.scala 14:77]
    node mac = asSInt(_mac_T_11) @[CNN.scala 14:77]
    node _io_out_T = leq(mac, asSInt(UInt<1>("h00"))) @[CNNSpec.scala 16:41]
    node _io_out_T_1 = mux(_io_out_T, asSInt(UInt<1>("h00")), mac) @[CNNSpec.scala 16:38]
    io.out <= _io_out_T_1 @[CNN.scala 15:10]
    
  module Neuron_6 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : SInt<7>[4], flip weights : SInt<7>[4], out : SInt<7>}
    
    node _mac_T = mul(io.in[0], io.weights[0]) @[CNN.scala 14:65]
    node _mac_T_1 = mul(io.in[1], io.weights[1]) @[CNN.scala 14:65]
    node _mac_T_2 = mul(io.in[2], io.weights[2]) @[CNN.scala 14:65]
    node _mac_T_3 = mul(io.in[3], io.weights[3]) @[CNN.scala 14:65]
    node _mac_T_4 = add(_mac_T, _mac_T_1) @[CNN.scala 14:77]
    node _mac_T_5 = tail(_mac_T_4, 1) @[CNN.scala 14:77]
    node _mac_T_6 = asSInt(_mac_T_5) @[CNN.scala 14:77]
    node _mac_T_7 = add(_mac_T_6, _mac_T_2) @[CNN.scala 14:77]
    node _mac_T_8 = tail(_mac_T_7, 1) @[CNN.scala 14:77]
    node _mac_T_9 = asSInt(_mac_T_8) @[CNN.scala 14:77]
    node _mac_T_10 = add(_mac_T_9, _mac_T_3) @[CNN.scala 14:77]
    node _mac_T_11 = tail(_mac_T_10, 1) @[CNN.scala 14:77]
    node mac = asSInt(_mac_T_11) @[CNN.scala 14:77]
    node _io_out_T = leq(mac, asSInt(UInt<1>("h00"))) @[CNNSpec.scala 16:41]
    node _io_out_T_1 = mux(_io_out_T, asSInt(UInt<1>("h00")), mac) @[CNNSpec.scala 16:38]
    io.out <= _io_out_T_1 @[CNN.scala 15:10]
    
  module Neuron_7 : 
    input clock : Clock
    input reset : Reset
    output io : {flip in : SInt<7>[4], flip weights : SInt<7>[4], out : SInt<7>}
    
    node _mac_T = mul(io.in[0], io.weights[0]) @[CNN.scala 14:65]
    node _mac_T_1 = mul(io.in[1], io.weights[1]) @[CNN.scala 14:65]
    node _mac_T_2 = mul(io.in[2], io.weights[2]) @[CNN.scala 14:65]
    node _mac_T_3 = mul(io.in[3], io.weights[3]) @[CNN.scala 14:65]
    node _mac_T_4 = add(_mac_T, _mac_T_1) @[CNN.scala 14:77]
    node _mac_T_5 = tail(_mac_T_4, 1) @[CNN.scala 14:77]
    node _mac_T_6 = asSInt(_mac_T_5) @[CNN.scala 14:77]
    node _mac_T_7 = add(_mac_T_6, _mac_T_2) @[CNN.scala 14:77]
    node _mac_T_8 = tail(_mac_T_7, 1) @[CNN.scala 14:77]
    node _mac_T_9 = asSInt(_mac_T_8) @[CNN.scala 14:77]
    node _mac_T_10 = add(_mac_T_9, _mac_T_3) @[CNN.scala 14:77]
    node _mac_T_11 = tail(_mac_T_10, 1) @[CNN.scala 14:77]
    node mac = asSInt(_mac_T_11) @[CNN.scala 14:77]
    node _io_out_T = leq(mac, asSInt(UInt<1>("h00"))) @[CNNSpec.scala 16:41]
    node _io_out_T_1 = mux(_io_out_T, asSInt(UInt<1>("h00")), mac) @[CNNSpec.scala 16:38]
    io.out <= _io_out_T_1 @[CNN.scala 15:10]
    
  module CNN : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : SInt<7>[4], flip vld_in : UInt<1>, flip weights : SInt<7>[4][4][2], out : SInt<7>[4], vld_out : UInt<1>}
    
    inst network_0_0 of Neuron @[CNN.scala 28:78]
    network_0_0.clock <= clock
    network_0_0.reset <= reset
    inst network_0_1 of Neuron_1 @[CNN.scala 28:78]
    network_0_1.clock <= clock
    network_0_1.reset <= reset
    inst network_0_2 of Neuron_2 @[CNN.scala 28:78]
    network_0_2.clock <= clock
    network_0_2.reset <= reset
    inst network_0_3 of Neuron_3 @[CNN.scala 28:78]
    network_0_3.clock <= clock
    network_0_3.reset <= reset
    inst network_1_0 of Neuron_4 @[CNN.scala 28:78]
    network_1_0.clock <= clock
    network_1_0.reset <= reset
    inst network_1_1 of Neuron_5 @[CNN.scala 28:78]
    network_1_1.clock <= clock
    network_1_1.reset <= reset
    inst network_1_2 of Neuron_6 @[CNN.scala 28:78]
    network_1_2.clock <= clock
    network_1_2.reset <= reset
    inst network_1_3 of Neuron_7 @[CNN.scala 28:78]
    network_1_3.clock <= clock
    network_1_3.reset <= reset
    network_0_0.io.in[0] <= io.in[0] @[CNN.scala 33:20]
    network_0_0.io.in[1] <= io.in[1] @[CNN.scala 33:20]
    network_0_0.io.in[2] <= io.in[2] @[CNN.scala 33:20]
    network_0_0.io.in[3] <= io.in[3] @[CNN.scala 33:20]
    network_0_0.io.weights[0] <= io.weights[0][0][0] @[CNN.scala 34:25]
    network_0_0.io.weights[1] <= io.weights[0][0][1] @[CNN.scala 34:25]
    network_0_0.io.weights[2] <= io.weights[0][0][2] @[CNN.scala 34:25]
    network_0_0.io.weights[3] <= io.weights[0][0][3] @[CNN.scala 34:25]
    network_0_1.io.in[0] <= io.in[0] @[CNN.scala 33:20]
    network_0_1.io.in[1] <= io.in[1] @[CNN.scala 33:20]
    network_0_1.io.in[2] <= io.in[2] @[CNN.scala 33:20]
    network_0_1.io.in[3] <= io.in[3] @[CNN.scala 33:20]
    network_0_1.io.weights[0] <= io.weights[0][1][0] @[CNN.scala 34:25]
    network_0_1.io.weights[1] <= io.weights[0][1][1] @[CNN.scala 34:25]
    network_0_1.io.weights[2] <= io.weights[0][1][2] @[CNN.scala 34:25]
    network_0_1.io.weights[3] <= io.weights[0][1][3] @[CNN.scala 34:25]
    network_0_2.io.in[0] <= io.in[0] @[CNN.scala 33:20]
    network_0_2.io.in[1] <= io.in[1] @[CNN.scala 33:20]
    network_0_2.io.in[2] <= io.in[2] @[CNN.scala 33:20]
    network_0_2.io.in[3] <= io.in[3] @[CNN.scala 33:20]
    network_0_2.io.weights[0] <= io.weights[0][2][0] @[CNN.scala 34:25]
    network_0_2.io.weights[1] <= io.weights[0][2][1] @[CNN.scala 34:25]
    network_0_2.io.weights[2] <= io.weights[0][2][2] @[CNN.scala 34:25]
    network_0_2.io.weights[3] <= io.weights[0][2][3] @[CNN.scala 34:25]
    network_0_3.io.in[0] <= io.in[0] @[CNN.scala 33:20]
    network_0_3.io.in[1] <= io.in[1] @[CNN.scala 33:20]
    network_0_3.io.in[2] <= io.in[2] @[CNN.scala 33:20]
    network_0_3.io.in[3] <= io.in[3] @[CNN.scala 33:20]
    network_0_3.io.weights[0] <= io.weights[0][3][0] @[CNN.scala 34:25]
    network_0_3.io.weights[1] <= io.weights[0][3][1] @[CNN.scala 34:25]
    network_0_3.io.weights[2] <= io.weights[0][3][2] @[CNN.scala 34:25]
    network_0_3.io.weights[3] <= io.weights[0][3][3] @[CNN.scala 34:25]
    network_1_0.io.in[0] <= network_0_0.io.out @[CNN.scala 45:24]
    network_1_0.io.in[1] <= network_0_1.io.out @[CNN.scala 45:24]
    network_1_0.io.in[2] <= network_0_2.io.out @[CNN.scala 45:24]
    network_1_0.io.in[3] <= network_0_3.io.out @[CNN.scala 45:24]
    network_1_0.io.weights[0] <= io.weights[1][0][0] @[CNN.scala 46:29]
    network_1_0.io.weights[1] <= io.weights[1][0][1] @[CNN.scala 46:29]
    network_1_0.io.weights[2] <= io.weights[1][0][2] @[CNN.scala 46:29]
    network_1_0.io.weights[3] <= io.weights[1][0][3] @[CNN.scala 46:29]
    network_1_1.io.in[0] <= network_0_0.io.out @[CNN.scala 45:24]
    network_1_1.io.in[1] <= network_0_1.io.out @[CNN.scala 45:24]
    network_1_1.io.in[2] <= network_0_2.io.out @[CNN.scala 45:24]
    network_1_1.io.in[3] <= network_0_3.io.out @[CNN.scala 45:24]
    network_1_1.io.weights[0] <= io.weights[1][1][0] @[CNN.scala 46:29]
    network_1_1.io.weights[1] <= io.weights[1][1][1] @[CNN.scala 46:29]
    network_1_1.io.weights[2] <= io.weights[1][1][2] @[CNN.scala 46:29]
    network_1_1.io.weights[3] <= io.weights[1][1][3] @[CNN.scala 46:29]
    network_1_2.io.in[0] <= network_0_0.io.out @[CNN.scala 45:24]
    network_1_2.io.in[1] <= network_0_1.io.out @[CNN.scala 45:24]
    network_1_2.io.in[2] <= network_0_2.io.out @[CNN.scala 45:24]
    network_1_2.io.in[3] <= network_0_3.io.out @[CNN.scala 45:24]
    network_1_2.io.weights[0] <= io.weights[1][2][0] @[CNN.scala 46:29]
    network_1_2.io.weights[1] <= io.weights[1][2][1] @[CNN.scala 46:29]
    network_1_2.io.weights[2] <= io.weights[1][2][2] @[CNN.scala 46:29]
    network_1_2.io.weights[3] <= io.weights[1][2][3] @[CNN.scala 46:29]
    network_1_3.io.in[0] <= network_0_0.io.out @[CNN.scala 45:24]
    network_1_3.io.in[1] <= network_0_1.io.out @[CNN.scala 45:24]
    network_1_3.io.in[2] <= network_0_2.io.out @[CNN.scala 45:24]
    network_1_3.io.in[3] <= network_0_3.io.out @[CNN.scala 45:24]
    network_1_3.io.weights[0] <= io.weights[1][3][0] @[CNN.scala 46:29]
    network_1_3.io.weights[1] <= io.weights[1][3][1] @[CNN.scala 46:29]
    network_1_3.io.weights[2] <= io.weights[1][3][2] @[CNN.scala 46:29]
    network_1_3.io.weights[3] <= io.weights[1][3][3] @[CNN.scala 46:29]
    reg reg_0 : SInt<7>, clock with : (reset => (reset, asSInt(UInt<7>("h00")))) @[CNN.scala 54:37]
    reg reg_1 : SInt<7>, clock with : (reset => (reset, asSInt(UInt<7>("h00")))) @[CNN.scala 54:37]
    reg reg_2 : SInt<7>, clock with : (reset => (reset, asSInt(UInt<7>("h00")))) @[CNN.scala 54:37]
    reg reg_3 : SInt<7>, clock with : (reset => (reset, asSInt(UInt<7>("h00")))) @[CNN.scala 54:37]
    reg_0 <= network_1_0.io.out @[CNN.scala 59:14]
    reg_0 <= network_1_1.io.out @[CNN.scala 59:14]
    reg_0 <= network_1_2.io.out @[CNN.scala 59:14]
    reg_0 <= network_1_3.io.out @[CNN.scala 59:14]
    io.out[0] <= reg_0 @[CNN.scala 63:10]
    io.out[1] <= reg_1 @[CNN.scala 63:10]
    io.out[2] <= reg_2 @[CNN.scala 63:10]
    io.out[3] <= reg_3 @[CNN.scala 63:10]
    reg reg_vld : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[CNN.scala 65:24]
    reg_vld <= io.vld_in @[CNN.scala 66:11]
    io.vld_out <= reg_vld @[CNN.scala 67:14]
    node _T = bits(reset, 0, 0) @[CNN.scala 70:9]
    node _T_1 = eq(_T, UInt<1>("h00")) @[CNN.scala 70:9]
    when _T_1 : @[CNN.scala 70:9]
      printf(clock, UInt<1>(1), "Input Values\n") @[CNN.scala 70:9]
      skip @[CNN.scala 70:9]
    node _T_2 = bits(reset, 0, 0) @[CNN.scala 72:11]
    node _T_3 = eq(_T_2, UInt<1>("h00")) @[CNN.scala 72:11]
    when _T_3 : @[CNN.scala 72:11]
      printf(clock, UInt<1>(1), "%d ", io.in[0]) @[CNN.scala 72:11]
      skip @[CNN.scala 72:11]
    node _T_4 = bits(reset, 0, 0) @[CNN.scala 72:11]
    node _T_5 = eq(_T_4, UInt<1>("h00")) @[CNN.scala 72:11]
    when _T_5 : @[CNN.scala 72:11]
      printf(clock, UInt<1>(1), "%d ", io.in[1]) @[CNN.scala 72:11]
      skip @[CNN.scala 72:11]
    node _T_6 = bits(reset, 0, 0) @[CNN.scala 72:11]
    node _T_7 = eq(_T_6, UInt<1>("h00")) @[CNN.scala 72:11]
    when _T_7 : @[CNN.scala 72:11]
      printf(clock, UInt<1>(1), "%d ", io.in[2]) @[CNN.scala 72:11]
      skip @[CNN.scala 72:11]
    node _T_8 = bits(reset, 0, 0) @[CNN.scala 72:11]
    node _T_9 = eq(_T_8, UInt<1>("h00")) @[CNN.scala 72:11]
    when _T_9 : @[CNN.scala 72:11]
      printf(clock, UInt<1>(1), "%d ", io.in[3]) @[CNN.scala 72:11]
      skip @[CNN.scala 72:11]
    node _T_10 = bits(reset, 0, 0) @[CNN.scala 74:9]
    node _T_11 = eq(_T_10, UInt<1>("h00")) @[CNN.scala 74:9]
    when _T_11 : @[CNN.scala 74:9]
      printf(clock, UInt<1>(1), "\nWeights\n") @[CNN.scala 74:9]
      skip @[CNN.scala 74:9]
    node _T_12 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_13 = eq(_T_12, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_13 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][0][0]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_14 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_15 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][0][1]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_16 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_17 = eq(_T_16, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_17 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][0][2]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_18 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_19 = eq(_T_18, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_19 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][0][3]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_20 = bits(reset, 0, 0) @[CNN.scala 80:13]
    node _T_21 = eq(_T_20, UInt<1>("h00")) @[CNN.scala 80:13]
    when _T_21 : @[CNN.scala 80:13]
      printf(clock, UInt<1>(1), "| ") @[CNN.scala 80:13]
      skip @[CNN.scala 80:13]
    node _T_22 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_23 = eq(_T_22, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_23 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][1][0]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_24 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_25 = eq(_T_24, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_25 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][1][1]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_26 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_27 = eq(_T_26, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_27 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][1][2]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_28 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_29 = eq(_T_28, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_29 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][1][3]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_30 = bits(reset, 0, 0) @[CNN.scala 80:13]
    node _T_31 = eq(_T_30, UInt<1>("h00")) @[CNN.scala 80:13]
    when _T_31 : @[CNN.scala 80:13]
      printf(clock, UInt<1>(1), "| ") @[CNN.scala 80:13]
      skip @[CNN.scala 80:13]
    node _T_32 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_33 = eq(_T_32, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_33 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][2][0]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_34 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_35 = eq(_T_34, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_35 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][2][1]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_36 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_37 = eq(_T_36, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_37 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][2][2]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_38 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_39 = eq(_T_38, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_39 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][2][3]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_40 = bits(reset, 0, 0) @[CNN.scala 80:13]
    node _T_41 = eq(_T_40, UInt<1>("h00")) @[CNN.scala 80:13]
    when _T_41 : @[CNN.scala 80:13]
      printf(clock, UInt<1>(1), "| ") @[CNN.scala 80:13]
      skip @[CNN.scala 80:13]
    node _T_42 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_43 = eq(_T_42, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_43 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][3][0]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_44 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_45 = eq(_T_44, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_45 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][3][1]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_46 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_47 = eq(_T_46, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_47 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][3][2]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_48 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_49 = eq(_T_48, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_49 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[0][3][3]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_50 = bits(reset, 0, 0) @[CNN.scala 80:13]
    node _T_51 = eq(_T_50, UInt<1>("h00")) @[CNN.scala 80:13]
    when _T_51 : @[CNN.scala 80:13]
      printf(clock, UInt<1>(1), "| ") @[CNN.scala 80:13]
      skip @[CNN.scala 80:13]
    node _T_52 = bits(reset, 0, 0) @[CNN.scala 82:11]
    node _T_53 = eq(_T_52, UInt<1>("h00")) @[CNN.scala 82:11]
    when _T_53 : @[CNN.scala 82:11]
      printf(clock, UInt<1>(1), "\n") @[CNN.scala 82:11]
      skip @[CNN.scala 82:11]
    node _T_54 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_55 = eq(_T_54, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_55 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][0][0]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_56 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_57 = eq(_T_56, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_57 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][0][1]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_58 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_59 = eq(_T_58, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_59 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][0][2]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_60 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_61 = eq(_T_60, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_61 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][0][3]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_62 = bits(reset, 0, 0) @[CNN.scala 80:13]
    node _T_63 = eq(_T_62, UInt<1>("h00")) @[CNN.scala 80:13]
    when _T_63 : @[CNN.scala 80:13]
      printf(clock, UInt<1>(1), "| ") @[CNN.scala 80:13]
      skip @[CNN.scala 80:13]
    node _T_64 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_65 = eq(_T_64, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_65 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][1][0]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_66 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_67 = eq(_T_66, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_67 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][1][1]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_68 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_69 = eq(_T_68, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_69 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][1][2]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_70 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_71 = eq(_T_70, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_71 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][1][3]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_72 = bits(reset, 0, 0) @[CNN.scala 80:13]
    node _T_73 = eq(_T_72, UInt<1>("h00")) @[CNN.scala 80:13]
    when _T_73 : @[CNN.scala 80:13]
      printf(clock, UInt<1>(1), "| ") @[CNN.scala 80:13]
      skip @[CNN.scala 80:13]
    node _T_74 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_75 = eq(_T_74, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_75 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][2][0]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_76 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_77 = eq(_T_76, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_77 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][2][1]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_78 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_79 = eq(_T_78, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_79 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][2][2]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_80 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_81 = eq(_T_80, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_81 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][2][3]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_82 = bits(reset, 0, 0) @[CNN.scala 80:13]
    node _T_83 = eq(_T_82, UInt<1>("h00")) @[CNN.scala 80:13]
    when _T_83 : @[CNN.scala 80:13]
      printf(clock, UInt<1>(1), "| ") @[CNN.scala 80:13]
      skip @[CNN.scala 80:13]
    node _T_84 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_85 = eq(_T_84, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_85 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][3][0]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_86 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_87 = eq(_T_86, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_87 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][3][1]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_88 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_89 = eq(_T_88, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_89 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][3][2]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_90 = bits(reset, 0, 0) @[CNN.scala 78:15]
    node _T_91 = eq(_T_90, UInt<1>("h00")) @[CNN.scala 78:15]
    when _T_91 : @[CNN.scala 78:15]
      printf(clock, UInt<1>(1), "%d ", io.weights[1][3][3]) @[CNN.scala 78:15]
      skip @[CNN.scala 78:15]
    node _T_92 = bits(reset, 0, 0) @[CNN.scala 80:13]
    node _T_93 = eq(_T_92, UInt<1>("h00")) @[CNN.scala 80:13]
    when _T_93 : @[CNN.scala 80:13]
      printf(clock, UInt<1>(1), "| ") @[CNN.scala 80:13]
      skip @[CNN.scala 80:13]
    node _T_94 = bits(reset, 0, 0) @[CNN.scala 82:11]
    node _T_95 = eq(_T_94, UInt<1>("h00")) @[CNN.scala 82:11]
    when _T_95 : @[CNN.scala 82:11]
      printf(clock, UInt<1>(1), "\n") @[CNN.scala 82:11]
      skip @[CNN.scala 82:11]
    node _T_96 = bits(reset, 0, 0) @[CNN.scala 84:9]
    node _T_97 = eq(_T_96, UInt<1>("h00")) @[CNN.scala 84:9]
    when _T_97 : @[CNN.scala 84:9]
      printf(clock, UInt<1>(1), "Output Values\n") @[CNN.scala 84:9]
      skip @[CNN.scala 84:9]
    node _T_98 = bits(reset, 0, 0) @[CNN.scala 87:13]
    node _T_99 = eq(_T_98, UInt<1>("h00")) @[CNN.scala 87:13]
    when _T_99 : @[CNN.scala 87:13]
      printf(clock, UInt<1>(1), "%d ", network_0_0.io.out) @[CNN.scala 87:13]
      skip @[CNN.scala 87:13]
    node _T_100 = bits(reset, 0, 0) @[CNN.scala 87:13]
    node _T_101 = eq(_T_100, UInt<1>("h00")) @[CNN.scala 87:13]
    when _T_101 : @[CNN.scala 87:13]
      printf(clock, UInt<1>(1), "%d ", network_0_1.io.out) @[CNN.scala 87:13]
      skip @[CNN.scala 87:13]
    node _T_102 = bits(reset, 0, 0) @[CNN.scala 87:13]
    node _T_103 = eq(_T_102, UInt<1>("h00")) @[CNN.scala 87:13]
    when _T_103 : @[CNN.scala 87:13]
      printf(clock, UInt<1>(1), "%d ", network_0_2.io.out) @[CNN.scala 87:13]
      skip @[CNN.scala 87:13]
    node _T_104 = bits(reset, 0, 0) @[CNN.scala 87:13]
    node _T_105 = eq(_T_104, UInt<1>("h00")) @[CNN.scala 87:13]
    when _T_105 : @[CNN.scala 87:13]
      printf(clock, UInt<1>(1), "%d ", network_0_3.io.out) @[CNN.scala 87:13]
      skip @[CNN.scala 87:13]
    node _T_106 = bits(reset, 0, 0) @[CNN.scala 89:11]
    node _T_107 = eq(_T_106, UInt<1>("h00")) @[CNN.scala 89:11]
    when _T_107 : @[CNN.scala 89:11]
      printf(clock, UInt<1>(1), "\n") @[CNN.scala 89:11]
      skip @[CNN.scala 89:11]
    node _T_108 = bits(reset, 0, 0) @[CNN.scala 87:13]
    node _T_109 = eq(_T_108, UInt<1>("h00")) @[CNN.scala 87:13]
    when _T_109 : @[CNN.scala 87:13]
      printf(clock, UInt<1>(1), "%d ", network_1_0.io.out) @[CNN.scala 87:13]
      skip @[CNN.scala 87:13]
    node _T_110 = bits(reset, 0, 0) @[CNN.scala 87:13]
    node _T_111 = eq(_T_110, UInt<1>("h00")) @[CNN.scala 87:13]
    when _T_111 : @[CNN.scala 87:13]
      printf(clock, UInt<1>(1), "%d ", network_1_1.io.out) @[CNN.scala 87:13]
      skip @[CNN.scala 87:13]
    node _T_112 = bits(reset, 0, 0) @[CNN.scala 87:13]
    node _T_113 = eq(_T_112, UInt<1>("h00")) @[CNN.scala 87:13]
    when _T_113 : @[CNN.scala 87:13]
      printf(clock, UInt<1>(1), "%d ", network_1_2.io.out) @[CNN.scala 87:13]
      skip @[CNN.scala 87:13]
    node _T_114 = bits(reset, 0, 0) @[CNN.scala 87:13]
    node _T_115 = eq(_T_114, UInt<1>("h00")) @[CNN.scala 87:13]
    when _T_115 : @[CNN.scala 87:13]
      printf(clock, UInt<1>(1), "%d ", network_1_3.io.out) @[CNN.scala 87:13]
      skip @[CNN.scala 87:13]
    node _T_116 = bits(reset, 0, 0) @[CNN.scala 89:11]
    node _T_117 = eq(_T_116, UInt<1>("h00")) @[CNN.scala 89:11]
    when _T_117 : @[CNN.scala 89:11]
      printf(clock, UInt<1>(1), "\n") @[CNN.scala 89:11]
      skip @[CNN.scala 89:11]
    node _T_118 = bits(reset, 0, 0) @[CNN.scala 91:9]
    node _T_119 = eq(_T_118, UInt<1>("h00")) @[CNN.scala 91:9]
    when _T_119 : @[CNN.scala 91:9]
      printf(clock, UInt<1>(1), "\n") @[CNN.scala 91:9]
      skip @[CNN.scala 91:9]
    
