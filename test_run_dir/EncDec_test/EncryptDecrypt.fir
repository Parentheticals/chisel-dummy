;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit EncryptDecrypt : 
  module EncryptDecrypt : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<256>[10]}, out : {flip ready : UInt<1>, valid : UInt<1>, bits : UInt<256>[10]}, encrypt : UInt<256>[10], encrypt_vld : UInt<1>}
    
    reg encryptors_1_0 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg encryptors_1_1 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg encryptors_1_2 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg encryptors_1_3 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg encryptors_1_4 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg encryptors_1_5 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg encryptors_1_6 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg encryptors_1_7 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg encryptors_1_8 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg encryptors_1_9 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg decryptors_0_0 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg decryptors_0_1 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg decryptors_0_2 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg decryptors_0_3 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg decryptors_0_4 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg decryptors_0_5 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg decryptors_0_6 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg decryptors_0_7 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg decryptors_0_8 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg decryptors_0_9 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 45:78]
    reg decryptors_1_0 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_1_1 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_1_2 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_1_3 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_1_4 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_1_5 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_1_6 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_1_7 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_1_8 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_1_9 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_2_0 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_2_1 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_2_2 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_2_3 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_2_4 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_2_5 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_2_6 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_2_7 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_2_8 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg decryptors_2_9 : UInt<256>, clock with : (reset => (reset, UInt<256>("h00"))) @[EncryptDecrypt.scala 46:83]
    reg validChain_1 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[EncryptDecrypt.scala 49:67]
    reg validChain_2 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[EncryptDecrypt.scala 49:67]
    reg validChain_3 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[EncryptDecrypt.scala 49:67]
    reg validChain_4 : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[EncryptDecrypt.scala 49:67]
    node _shift_T = eq(validChain_4, UInt<1>("h00")) @[EncryptDecrypt.scala 52:21]
    node shift = or(_shift_T, io.out.ready) @[EncryptDecrypt.scala 52:56]
    when shift : @[EncryptDecrypt.scala 58:41]
      encryptors_1_0 <= io.in.bits[0] @[EncryptDecrypt.scala 60:17]
      encryptors_1_1 <= io.in.bits[3] @[EncryptDecrypt.scala 60:17]
      encryptors_1_2 <= io.in.bits[5] @[EncryptDecrypt.scala 60:17]
      encryptors_1_3 <= io.in.bits[2] @[EncryptDecrypt.scala 60:17]
      encryptors_1_4 <= io.in.bits[7] @[EncryptDecrypt.scala 60:17]
      encryptors_1_5 <= io.in.bits[4] @[EncryptDecrypt.scala 60:17]
      encryptors_1_6 <= io.in.bits[9] @[EncryptDecrypt.scala 60:17]
      encryptors_1_7 <= io.in.bits[8] @[EncryptDecrypt.scala 60:17]
      encryptors_1_8 <= io.in.bits[6] @[EncryptDecrypt.scala 60:17]
      encryptors_1_9 <= io.in.bits[1] @[EncryptDecrypt.scala 60:17]
      skip @[EncryptDecrypt.scala 58:41]
    when shift : @[EncryptDecrypt.scala 58:41]
      decryptors_0_0 <= encryptors_1_0 @[EncryptDecrypt.scala 60:17]
      decryptors_0_1 <= encryptors_1_3 @[EncryptDecrypt.scala 60:17]
      decryptors_0_2 <= encryptors_1_8 @[EncryptDecrypt.scala 60:17]
      decryptors_0_3 <= encryptors_1_4 @[EncryptDecrypt.scala 60:17]
      decryptors_0_4 <= encryptors_1_6 @[EncryptDecrypt.scala 60:17]
      decryptors_0_5 <= encryptors_1_5 @[EncryptDecrypt.scala 60:17]
      decryptors_0_6 <= encryptors_1_7 @[EncryptDecrypt.scala 60:17]
      decryptors_0_7 <= encryptors_1_2 @[EncryptDecrypt.scala 60:17]
      decryptors_0_8 <= encryptors_1_1 @[EncryptDecrypt.scala 60:17]
      decryptors_0_9 <= encryptors_1_9 @[EncryptDecrypt.scala 60:17]
      skip @[EncryptDecrypt.scala 58:41]
    when shift : @[EncryptDecrypt.scala 70:41]
      decryptors_1_0 <= decryptors_0_0 @[EncryptDecrypt.scala 72:17]
      decryptors_1_1 <= decryptors_0_8 @[EncryptDecrypt.scala 72:17]
      decryptors_1_2 <= decryptors_0_7 @[EncryptDecrypt.scala 72:17]
      decryptors_1_3 <= decryptors_0_1 @[EncryptDecrypt.scala 72:17]
      decryptors_1_4 <= decryptors_0_3 @[EncryptDecrypt.scala 72:17]
      decryptors_1_5 <= decryptors_0_5 @[EncryptDecrypt.scala 72:17]
      decryptors_1_6 <= decryptors_0_4 @[EncryptDecrypt.scala 72:17]
      decryptors_1_7 <= decryptors_0_6 @[EncryptDecrypt.scala 72:17]
      decryptors_1_8 <= decryptors_0_2 @[EncryptDecrypt.scala 72:17]
      decryptors_1_9 <= decryptors_0_9 @[EncryptDecrypt.scala 72:17]
      skip @[EncryptDecrypt.scala 70:41]
    when shift : @[EncryptDecrypt.scala 70:41]
      decryptors_2_0 <= decryptors_1_0 @[EncryptDecrypt.scala 72:17]
      decryptors_2_1 <= decryptors_1_9 @[EncryptDecrypt.scala 72:17]
      decryptors_2_2 <= decryptors_1_3 @[EncryptDecrypt.scala 72:17]
      decryptors_2_3 <= decryptors_1_1 @[EncryptDecrypt.scala 72:17]
      decryptors_2_4 <= decryptors_1_5 @[EncryptDecrypt.scala 72:17]
      decryptors_2_5 <= decryptors_1_2 @[EncryptDecrypt.scala 72:17]
      decryptors_2_6 <= decryptors_1_8 @[EncryptDecrypt.scala 72:17]
      decryptors_2_7 <= decryptors_1_4 @[EncryptDecrypt.scala 72:17]
      decryptors_2_8 <= decryptors_1_7 @[EncryptDecrypt.scala 72:17]
      decryptors_2_9 <= decryptors_1_6 @[EncryptDecrypt.scala 72:17]
      skip @[EncryptDecrypt.scala 70:41]
    when shift : @[EncryptDecrypt.scala 80:40]
      validChain_1 <= io.in.valid @[EncryptDecrypt.scala 80:46]
      skip @[EncryptDecrypt.scala 80:40]
    when shift : @[EncryptDecrypt.scala 80:40]
      validChain_2 <= validChain_1 @[EncryptDecrypt.scala 80:46]
      skip @[EncryptDecrypt.scala 80:40]
    when shift : @[EncryptDecrypt.scala 80:40]
      validChain_3 <= validChain_2 @[EncryptDecrypt.scala 80:46]
      skip @[EncryptDecrypt.scala 80:40]
    when shift : @[EncryptDecrypt.scala 80:40]
      validChain_4 <= validChain_3 @[EncryptDecrypt.scala 80:46]
      skip @[EncryptDecrypt.scala 80:40]
    node _io_in_ready_T = eq(validChain_4, UInt<1>("h00")) @[EncryptDecrypt.scala 84:18]
    node _io_in_ready_T_1 = or(_io_in_ready_T, io.out.ready) @[EncryptDecrypt.scala 84:53]
    io.in.ready <= _io_in_ready_T_1 @[EncryptDecrypt.scala 84:15]
    io.encrypt[0] <= decryptors_0_0 @[EncryptDecrypt.scala 85:14]
    io.encrypt[1] <= decryptors_0_1 @[EncryptDecrypt.scala 85:14]
    io.encrypt[2] <= decryptors_0_2 @[EncryptDecrypt.scala 85:14]
    io.encrypt[3] <= decryptors_0_3 @[EncryptDecrypt.scala 85:14]
    io.encrypt[4] <= decryptors_0_4 @[EncryptDecrypt.scala 85:14]
    io.encrypt[5] <= decryptors_0_5 @[EncryptDecrypt.scala 85:14]
    io.encrypt[6] <= decryptors_0_6 @[EncryptDecrypt.scala 85:14]
    io.encrypt[7] <= decryptors_0_7 @[EncryptDecrypt.scala 85:14]
    io.encrypt[8] <= decryptors_0_8 @[EncryptDecrypt.scala 85:14]
    io.encrypt[9] <= decryptors_0_9 @[EncryptDecrypt.scala 85:14]
    io.encrypt_vld <= validChain_2 @[EncryptDecrypt.scala 86:18]
    io.out.bits[0] <= decryptors_2_0 @[EncryptDecrypt.scala 87:15]
    io.out.bits[1] <= decryptors_2_1 @[EncryptDecrypt.scala 87:15]
    io.out.bits[2] <= decryptors_2_2 @[EncryptDecrypt.scala 87:15]
    io.out.bits[3] <= decryptors_2_3 @[EncryptDecrypt.scala 87:15]
    io.out.bits[4] <= decryptors_2_4 @[EncryptDecrypt.scala 87:15]
    io.out.bits[5] <= decryptors_2_5 @[EncryptDecrypt.scala 87:15]
    io.out.bits[6] <= decryptors_2_6 @[EncryptDecrypt.scala 87:15]
    io.out.bits[7] <= decryptors_2_7 @[EncryptDecrypt.scala 87:15]
    io.out.bits[8] <= decryptors_2_8 @[EncryptDecrypt.scala 87:15]
    io.out.bits[9] <= decryptors_2_9 @[EncryptDecrypt.scala 87:15]
    io.out.valid <= validChain_4 @[EncryptDecrypt.scala 88:16]
    
